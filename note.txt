Текстовый редактор с подсветкой
###############################
Представляет собой модель MVC с управлением по таймеру.
те по таймеру выполняется прорисовка изображения на экране и сохранение данных из буфера редактора.

Функционально состоит из 3 блоков:
-- Блок хранения данных.
-- Блок отображения.
-- Буфер ввода текста.

В БХ посылается комманда на вывод строк из диапазона, который нужно отобразить (с указанеем начальной позиции).
Из БХ текстовые строки пересылаются в БО. Область, которую нужно перерисовать накапливается в отдельном буфере.
Строки храняться в виде записи - (строка; массив цветов(цвет; длина строки)). Если массив цветов отсутствует - строка отображается цветом по умолчанию.
По таймеру происходит перерисовка требуемой области отображения. Перерисовка выполняется последовательно для каждого цвета.
Так же по таймеру выполняется сборс данных в БХ. Если в БХ происходит расчет изменения цвета - цветовая карта пересылается в БО в асинхронном режиме.

Подстановка цветов выполняется блоком хранения (в фоновом режиме).

Для тестирования предлагается отображать альтернативным цветом ключевые слова (C#, Pascal) и комментарии ( --; /**/; //; (**); ; в начале строки; # в начале строки )



========================================
24.09.2018

Предварительный макет готов. Он позволяет выводить на экран текст из файла.

Введем понятие курсора. Пусть это будет некая мигающая сущьность, координатами которой можно управлять с помощью стрелок на клавиатуре.
На вскидку может быть 3 варианта: прямоугольник, черта с правой стороны буквы, нижнее подчеркивание.

========================================
25.09.2018

План:

Буфер вывода
Курсор
Редактирование текста
...

https://docs.microsoft.com/ru-ru/dotnet/framework/winforms/controls/how-to-develop-a-simple-windows-forms-control
Делаем контрол

TextEdit теперь работает как контрол с буферным битмапом.

Перенаправим вывод в буферный битмап

========================================
27.09.2018

На текущий момент реализован курсор (бегает по кнопкам up, down, left, right). Научили правильно реагировать на получение/потерю фокуса. 
Курсор пока не моргает - но вроде и так симпатично :-)

Изображение более - менее не моргает при перерисовке. Корректно изменяется при изменении размеров.



Делаем буферризированный ввод от клавиатуры (ну это как бы основная чать проекта).

входные символы будем определять на вызове
OnKeyDown и OnKeyPress
Причем на первой процедуре будем считать все символы , как элементы блока за исключением bkSpase и Enter.
На второй процедуре отлавливаем Up, Down, Left, Right, Delete.
Другие команды можно будет добавить при необходимости.

Реализацию будем делать в файле TextEdit_Control

? Ctrl - Y для удаления строки


Так, ну будем считать, что немного погорячился :-)
По итогам: концепция в общем рабочая. В NextEdit.cs в строке №94             timer.Interval = 200; можно менять время отклика. 
В целом работает - но нужно прибираться. Пока только вставка фрагментов строки. Хотя остальное уже не принципиально, по аналогии.